{
	"info": {
		"_postman_id": "d1fb131a-d4ea-4edd-9082-38baf55638f7",
		"name": "Monitor API - OnPrem Demo",
		"description": "# Background\n\nThe collection shows how to use Citrix Monitor APIs to collect, analyze, and categorize data from the CVAD (OnPrem).\n\nThe examples walkthrough the CVAD dataset that is available through API and give hands-on experience on how to play around with the data from CVAD environment.\n\n# Benefits\n\nBy learning to use the API customer admins can:\n\n1. Create a single pane of glass for the Citrix stack data\n2. Build their own monitoring and troubleshooting dashboards for both admins and helpdesk.\n3. Build Integration with 3rd-party systems or data lake for observability or reporting on VDI usage.\n    \n\n# Environment (Demo_OnPrem)\n\n## OnPrem\n\n**URI:** https://{DeliveryController}/Citrix/Monitor/OData/v4/Data/\n\n**Authentication:** Oprem uses **NTLM authentication**. Username and password need to be set along with right set of permissions on the CVAD environment.\n\n# References\n\n1. [https://developer-docs.citrix.com/en-us/monitor-service-odata-api/current-release/](https://developer-docs.citrix.com/en-us/monitor-service-odata-api/current-release/)\n2. [https://developer.cloud.com/citrix-cloud/citrix-cloud-api-overview/docs/get-started-with-citrix-cloud-apis](https://developer.cloud.com/citrix-cloud/citrix-cloud-api-overview/docs/get-started-with-citrix-cloud-apis)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28116645",
		"_collection_link": "https://www.postman.com/citrix-data-access/workspace/citrix-data-public-workspace/collection/27876429-d1fb131a-d4ea-4edd-9082-38baf55638f7?action=share&creator=28116645&source=collection_link"
	},
	"item": [
		{
			"name": "Active machines with count",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/Citrix/Monitor/OData/v4/Data/Machines?$filter=LifecycleState eq 0&$count=true",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"Citrix",
						"Monitor",
						"OData",
						"v4",
						"Data",
						"Machines"
					],
					"query": [
						{
							"key": "$filter",
							"value": "LifecycleState eq 0"
						},
						{
							"key": "$count",
							"value": "true"
						}
					]
				},
				"description": "- Use **/Machines** resource\n- LifecycleState value **0** represents **Active** machines\n- **$count=true** parameter returns count in response"
			},
			"response": []
		},
		{
			"name": "Active applications with count",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/Citrix/Monitor/OData/v4/Data/Applications?$filter=LifecycleState eq 0&$count=true",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"Citrix",
						"Monitor",
						"OData",
						"v4",
						"Data",
						"Applications"
					],
					"query": [
						{
							"key": "$filter",
							"value": "LifecycleState eq 0"
						},
						{
							"key": "$count",
							"value": "true"
						}
					]
				},
				"description": "- Use **/Applications** resource\n- LifecycleState value **0** represents **Active** applications\n- **$count=true** parameter returns count in response"
			},
			"response": []
		},
		{
			"name": "Terminated sessions in a time range",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/Citrix/Monitor/OData/v4/Data/Sessions?$filter=ConnectionState ne 3 or FailureDate gt 2020-12-04T15:08:25.000Z",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"Citrix",
						"Monitor",
						"OData",
						"v4",
						"Data",
						"Sessions"
					],
					"query": [
						{
							"key": "$filter",
							"value": "ConnectionState ne 3 or FailureDate gt 2020-12-04T15:08:25.000Z"
						}
					]
				},
				"description": "- Use **/Sessions** resource\n- ConnectionState ne **3** represents **terminated** sessions\n- FailureDate gt 2020-12-04T15:08:25.000Z gets failures after the mentioned timestamp"
			},
			"response": []
		},
		{
			"name": "Users with high logon duration",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/Citrix/Monitor/OData/v4/Data/Sessions?$filter=StartDate gt 2020-03-01 and LogonDuration gt 20000 &$expand=Machine($select=Name;$expand=DesktopGroup($select=Name)),User($select=FullName)&$select=StartDate,LogonDuration&orderby=LogOnDuration desc",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"Citrix",
						"Monitor",
						"OData",
						"v4",
						"Data",
						"Sessions"
					],
					"query": [
						{
							"key": "$filter",
							"value": "StartDate gt 2020-03-01 and LogonDuration gt 20000 "
						},
						{
							"key": "$expand",
							"value": "Machine($select=Name;$expand=DesktopGroup($select=Name)),User($select=FullName)"
						},
						{
							"key": "$select",
							"value": "StartDate,LogonDuration"
						},
						{
							"key": "orderby",
							"value": "LogOnDuration desc"
						}
					]
				},
				"description": "- Use **/Sessions** resource\n- StartDate gt 2020-03-01 selects sessions started after the timestamp\n- LogonDuration gt 20000 selects users with logon duration greater than 20 seconds\n- $expand=Machine($select=Name;$expand=DesktopGroup($select=Name)) adds machine details\n- User($select=FullName)&$select=StartDate,LogonDuration adds user details\n- orderby=LogOnDuration desc sorts the results in descending order"
			},
			"response": []
		},
		{
			"name": "Metadata",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/Citrix/Monitor/OData/v4/Data/$metadata",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"Citrix",
						"Monitor",
						"OData",
						"v4",
						"Data",
						"$metadata"
					]
				},
				"description": "- Returns metadata about all entities supported and their attributes"
			},
			"response": []
		}
	],
	"auth": {
		"type": "ntlm",
		"ntlm": [
			{
				"key": "password",
				"value": "{{password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}